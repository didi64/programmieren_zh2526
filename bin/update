#!/bin/bash

set -euo pipefail

ANSWER=""
work="${HOME}/work"
repo_url="$work/.src"
nb_dir="${work}"
contents="${repo_url}/contents.txt"

is_numeric='^[0-9]+$'
is_number='^[1-9][0-9]*$'

options=""
HELP=$(cat <<EOF

usage:
======
1a) update <Nummer der Lektion>
    kopiert die Files der Lektion <Nummer der Lektion> nach  work/notebooks

1b) update -n <Nummer der Lektion>
    update -y <Nummer der Lektion>
    kopiert die Files der Lektion <Nummer der Lektion> nach  work/notebooks und ueberschreibt immer (-y) oder nie (-n)
       

2) update <file1> [<file2> ...]
   Kopiere, falls vorhanden, die FIles oder Ordner <file1>,... nach work/notebooks

3) update -e
   update extras

Beispiele:
==========
studi@jlab:~/work$ update 1
studi@jlab:~/work$ update some_notebook.ipynb
studi@jlab:~/work$ update -n some_folder\n
 
EOF
)

if [[ $# -eq 0 ]]; then 
    printf "$HELP"
    exit 1
fi

process_file () {
    # echo "target: $nb_dir"
    echo "processing $1"
    if [[ "$ANSWER" == "" ]]; then
        find "$repo_url" -type d -name $1 -exec cp -ri {} "$nb_dir" \;
        find "$repo_url" -type f -name $1 -exec cp -i {} "$nb_dir" \;
    else
        find "$repo_url" -type d -name $1 -exec cp -ri {} "$nb_dir" &> /dev/null \; < <(yes $ANSWER)
        find "$repo_url" -type f -name $1 -exec cp -i {} "$nb_dir" &> /dev/null \; < <(yes $ANSWER)
    fi
}

pull () {
    git -C "$repo_url" pull
    # find "$repo_url" -type f -name "*.ipynb" -exec chmod 444 {} \;
}

# parse the arguments: extract the answer

while [[ $# -gt 0 ]]; do
  case $1 in
    -y|--yes)
      ANSWER="yes"
      set -- "${@:2}"
      ;;
    -n|--no)
      ANSWER="no"
      set -- "${@:2}"
      ;;
    -e|--extras)
      set -- "${@:2}"
      POSITIONAL_ARGS+=("999") # s--extras are lesson 999
      ;;
    -*|--*)
      echo "Unknown option $1"
      exit 1
      ;;
    *)
      POSITIONAL_ARGS+=("$1") # save positional arg
      shift # past argument
      ;;
  esac
done

set -- "${POSITIONAL_ARGS[@]}" # restore positional parameters


pull

# echo "args: $@"
for item in "$@"; do
    if [[ $item =~ $is_numeric ]]; then
        files=$(sed -n "s/^${item}:\(.*\)/\1/p" "$contents")
        for file in $files; do
            process_file $file
        done
        if [[ $item =~ $is_number ]]; then echo $item > $work/.lesson; fi
    else
        n=$(find . -name $item | wc -l)
        if [ $n -gt 0 ]; then
            process_file $item
        else
            echo "$item not found!"
        fi
    fi  
done